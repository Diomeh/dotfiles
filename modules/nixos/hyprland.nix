{ config, pkgs, lib, inputs, ... }:

let
  use_nvidia_gpu = config.boot.kernelPackages == pkgs.linuxPackages.nvidia_x11;
in {
  # Enable hyprland cachix for home-manager module
  nix.settings = {
    substituters = ["https://hyprland.cachix.org"];
    trusted-public-keys = ["hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc="];
  };

  # Enable Hyprland
  programs.hyprland = {
    enable = true;
    xwayland.enable = true;
    package = inputs.hyprland.packages.${pkgs.system}.hyprland;
  };

  # nvidia specific session variables
  environment.sessionVariables =
#   lib.mkIf use_nvidia_gpu
  {
    # WAYLAND_DISPLAY = ":1";
    XDG_SESSION_TYPE = "wayland";
    XDG_SESSION_DESKTOP = "hyprland";

    # Prevent invisible cursor
    WLR_NO_HARDWARE_CURSORS = "1";

    # Hint electron apps to use wayland
    NIXOS_OZONE_WL = "1";
  };

  hardware.opengl.enable = true;

  environment.systemPackages = with pkgs; [
    (waybar.overrideAttrs (oldAttrs: {
      mesonFlags = oldAttrs.mesonFlags ++ [ "-Dexperimental=true" ];
    }))
    libnotify
    dunst # Notification daemon
    swww # Sway wallpaper
    kitty # Terminal emulator
    alacritty
    rofi-wayland # Application launcher
    networkmanagerapplet # Network manager applet
    grim # Screenshot tool
    slurp # Select tool
    wl-clipboard # Clipboard manager
  ];

  services.displayManager.sddm.wayland.enable = true;
  services = {
    xserver.enable = lib.mkForce false; # disable xorg server
    # https://wiki.archlinux.org/title/Greetd
#     greetd = {
#       enable = true;
#       settings = {
#         default_session = {
#           # Wayland Desktop Manager is installed only for user ryan via home-manager!
# #           user = myvars.username;
#           # .wayland-session is a script generated by home-manager, which links to the current wayland compositor(sway/hyprland or others).
#           # with such a vendor-no-locking script, we can switch to another wayland compositor without modifying greetd's config here.
#           command = "$HOME/.wayland-session"; # start a wayland session directly without a login manager
#           # command = "${pkgs.greetd.tuigreet}/bin/tuigreet --time --cmd $HOME/.wayland-session";  # start wayland session with a TUI login manager
#         };
#       };
#     };
  };

  # Enable desktop portals
  xdg.portal = {
    enable = true;
    wlr.enable = true;
    extraPortals = with pkgs; [
      xdg-desktop-portal-wlr
    ];
  };

  # fix https://github.com/ryan4yin/nix-config/issues/10
  security.pam.services.swaylock = {};
}
